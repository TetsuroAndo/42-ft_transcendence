version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ft_backend
    env_file: 
      - .env
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - sqlite_data:/app/data
    networks:
      - ft_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ft_frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ft_network
    depends_on:
      - backend
    restart: unless-stopped

  reverse-proxy:
    build:
      context: ./infrastructure/docker
      dockerfile: Dockerfile.reverse-proxy
    container_name: ft_proxy
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./infrastructure/docker/nginx:/etc/nginx/conf.d
      - ./infrastructure/docker/ssl:/etc/nginx/ssl
    networks:
      - ft_network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

# Uncomment these services as needed for future expansion

#  waf:
#    build:
#      context: ./infrastructure/docker
#      dockerfile: Dockerfile.waf
#    container_name: ft_waf
#    volumes:
#      - ./infrastructure/waf:/etc/modsecurity
#    networks:
#      - ft_network
#    depends_on:
#      - reverse-proxy
#    restart: unless-stopped

#  vault:
#    build:
#      context: ./infrastructure/docker
#      dockerfile: Dockerfile.vault
#    container_name: ft_vault
#    volumes:
#      - vault_data:/vault/data
#    cap_add:
#      - IPC_LOCK
#    ports:
#      - "${VAULT_PORT:-8200}:8200"
#    networks:
#      - ft_network
#    restart: unless-stopped

volumes:
  sqlite_data:
    driver: local
  vault_data:
    driver: local

networks:
  ft_network:
    driver: bridge
